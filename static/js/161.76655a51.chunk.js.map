{"version":3,"file":"static/js/161.76655a51.chunk.js","mappings":"mMASA,EANqB,WACjB,OACI,gBAAKA,UAAU,QAAQC,IAAKC,EAAKC,IAAI,Y,yECc7C,EAhBkB,SAAC,GAA4B,IAA3BC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,KACnC,EAAyCA,EAAlCC,GAAAA,OAAP,MAAY,EAAZ,IAAyCD,EAA1BE,MAAAA,OAAf,MAAuB,GAAvB,IAAyCF,EAAdG,MAAAA,OAA3B,MAAmC,GAAnC,EAEA,OACC,iBAAcT,UAAU,QAAxB,WACC,SAAC,KAAD,CACCU,GAAE,WAAMN,EAAN,YAAkBC,EAAlB,YAA0BE,GAC5BI,MAAO,CAACC,gBAAe,cAAUH,EAAV,MACtBT,UAAU,cAHZ,UAIE,gBAAKA,UAAU,oBAEjB,gBAAKA,UAAU,cAAf,SAA8BQ,MAPrBD,K,qJCiFZ,EA1DkB,SAAC,GAAsB,IAArBF,EAAoB,EAApBA,KAAMD,EAAc,EAAdA,SACzB,GAA4BS,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA4CF,EAAAA,EAAAA,YAA5C,eAAuBG,GAAvB,WACA,GAAwBH,EAAAA,EAAAA,UAAS,MAAjC,eAAOI,EAAP,KAAaC,EAAb,KACA,GAAoCL,EAAAA,EAAAA,WAAS,GAA7C,eAAOM,EAAP,KAAmBC,EAAnB,KACMC,GAAWC,EAAAA,EAAAA,MAEjB,GAA6CC,EAAAA,EAAAA,KAAtCC,EAAP,EAAOA,cAAeC,EAAtB,EAAsBA,WAAYC,EAAlC,EAAkCA,QAE5BC,EAAY,SAACC,GAClB,IAAIC,GAAQ,EACRD,EAASE,OAAS,KACrBD,GAAQ,GAETE,QAAQC,IAAI,UACZjB,GAAU,SAAAD,GAAM,wBAAQA,IAAR,OAAmBc,OACnCZ,GAAkB,SAAAiB,GAAc,OAAI,KACpCf,GAAQ,SAAAD,GAAI,OAAIA,EAAO,KACvBG,GAAc,SAAAD,GAAU,OAAIU,MAGvBK,EAAY,SAACjB,EAAMkB,GACfnB,GAATmB,GACAJ,QAAQC,IAAIf,GACZO,EAAcnB,EAAMY,EAAOb,GAC1BgC,KAAKT,GACLS,MAAK,kBAAMX,EAAW,kBAGxBY,EAAAA,EAAAA,YAAU,WACTtB,EAAU,IACVG,EAAQ,GACRgB,EAAUjB,GAAM,KAEd,CAACZ,EAAMD,EAAUiB,EAASiB,WAE7B,IAIMC,GAAWC,EAAAA,EAAAA,UAAS,kBAvDR,SAACd,EAASe,EAAWnC,EAAM2B,GAC7C,OAAQP,GACP,IAAK,UACJ,OAAQ,SAAC,IAAD,IACT,IAAK,UACJ,OAAQO,GAAiB,SAACQ,EAAD,KAAe,SAAC,IAAD,IACzC,IAAK,QACJ,OAAO,SAAC,IAAD,IACR,IAAK,YACJ,OAAO,SAACA,EAAD,IACR,QACC,MAAM,IAAIC,MAAJ,sCAAyChB,KA4ChBiB,CAAWjB,GAAS,kBAH5CZ,EAAO8B,KAAI,SAAAC,GAAC,OAAI,SAAC,IAAD,CAAWzC,SAAUA,EAAUC,KAAMA,EAAMC,KAAMuC,YAGkB,CAACnB,IAE7F,OACC,iBAAK1B,UAAU,SAAf,WACC,eAAIA,UAAU,2BAAd,SACEuC,KAEF,mBACCO,SAAU3B,EACV4B,QAAS,kBAAMb,EAAUjB,IACzBN,MAAO,CAAE,QAAWQ,EAAa,OAAS,IAC1CnB,UAAU,MAJX,2B,SCnDH,EAvBiB,SAAC,GAAsB,IAArBK,EAAoB,EAApBA,KAAMD,EAAc,EAAdA,SACxB,OACC,iCACC,UAAC4C,EAAA,EAAD,YACM,6BAAQ5C,EAAS,GAAG6C,cAAgB7C,EAAS8C,MAAM,GAAnD,sCACA,iBACCC,KAAK,cACLC,QAAQ,mKAEf,eAAIpD,UAAU,gBAAd,SACEI,EAAS6C,iBAEX,iBAAKjD,UAAU,qBAAf,WACS,kBAAOK,KAAK,OAAOgD,YAAY,wBAC9B,gBAAKrD,UAAU,iBAAf,UACI,mBAAQA,UAAU,kBAAlB,0BAGd,SAAC,EAAD,CAAWK,KAAMA,EAAMD,SAAUA,S,qGC4DpC,EA/EyB,WACrB,IAAMkD,EAAS,mCACTC,EAAU,8BACVC,EAAY,mCAClB,ECJmB,WACtB,OAA8B3C,EAAAA,EAAAA,UAAS,WAAvC,eAAOa,EAAP,KAAgBD,EAAhB,KAEMgC,GAAUC,EAAAA,EAAAA,aAAW,mCAAC,WAAOC,GAAP,4LAC3BlC,EAAW,WADgB,kBAIHmC,MAAMD,GAJH,WAIpBE,EAJoB,QAMZC,GANY,uBAMF,IAAIpB,MAAJ,0BAA6BiB,EAA7B,qBAA6CE,EAASE,SANpD,yBAQPF,EAASG,OARF,eAQpB1D,EARoB,yBAUnBA,GAVmB,wCAY1BmB,EAAW,SAZe,+DAAD,sDAexB,IAEGwC,GAAaP,EAAAA,EAAAA,cAAY,kBAAMjC,EAAW,aAAY,IAE5D,MAAO,CAAEC,QAAAA,EAASD,WAAAA,EAAYgC,QAAAA,EAASQ,WAAAA,GDlBeC,GAA5CxC,EAAP,EAAOA,QAASD,EAAhB,EAAgBA,WAAYgC,EAA5B,EAA4BA,QAASQ,EAArC,EAAqCA,WAE/BzC,EAAa,mCAAG,6GAAOnB,EAAP,+BAAc,UAAWY,EAAzB,+BAAgC,EAAGb,EAAnC,+BAA8C,QAA9C,SACKqD,EAAQ,GAAD,OAAIF,EAAJ,aAAgBnD,EAAhB,YAA4BC,EAA5B,oBAA4CiD,EAA5C,gCAA0ErC,IADtF,cACZ4C,EADY,yBAEXA,EAASM,QAAQvB,IAAIwB,IAFV,2CAAH,qDAKbC,EAAY,mCAAG,WAAO9D,GAAP,2HAAkB,UAAWH,EAA7B,+BAAwC,QAAxC,SACMqD,EAAQ,GAAD,OAAIF,EAAJ,aAAgBnD,EAAhB,YAA4BG,EAA5B,oBAA0C+C,EAA1C,oBADb,cACXO,EADW,yBAEVS,EAAiBT,IAFP,2CAAH,sDAKZU,EAAoB,mCAAG,6GAAOC,EAAP,+BAAgB,GAAIvD,EAApB,+BAA2B,EAAGb,EAA9B,+BAAyC,QAAzC,SACFqD,EAAQ,GAAD,OAAIF,EAAJ,aAAgBnD,EAAhB,2BAA2CkD,EAA3C,gCAAyErC,EAAzE,kBAAuFuD,IAD5F,cACnBX,EADmB,yBAElBA,EAASM,QAAQvB,IAAIwB,IAFH,2CAAH,qDAKpBK,EAAiB,mCAAG,WAAOlE,GAAP,4FAAWH,EAAX,+BAAsB,QAAtB,SACCqD,EAAQ,GAAD,OAAIF,EAAJ,aAAgBnD,EAAhB,YAA4BG,EAA5B,4BAAkD+C,EAAlD,2BADR,cAChBO,EADgB,yBAEfA,EAASM,QAAQvB,IAAIwB,IAFN,2CAAH,sDAKjBE,EAAmB,SAAEI,GACvB,IACInE,EAYAmE,EAZAnE,GACAC,EAWAkE,EAXAlE,MACAmE,EAUAD,EAVAC,YACAC,EASAF,EATAE,SACAC,EAQAH,EARAG,OACAC,EAOAJ,EAPAI,SACAC,EAMAL,EANAK,aACAC,EAKAN,EALAM,WACAC,EAIAP,EAJAO,cACAC,EAGAR,EAHAQ,QACAC,EAEAT,EAFAS,qBACAC,EACAV,EADAU,aAGJ,MAAO,CACH7E,GAAAA,EACAC,MAAAA,EACAoE,SAAAA,EACAnE,MAAO+C,EAAYmB,EACnBE,OAAQA,EAAOjC,KAAK,SAAAC,GAAC,OAAIA,EAAEM,QAC3B2B,SAAAA,EACAC,aAAAA,EACAC,WAAAA,EACAE,QAAAA,EACAC,qBAAsBA,EAAqBvC,KAAK,SAAAC,GAAC,OAAIA,EAAEM,QACvDiC,aAAAA,EACAC,GAAI7B,EAAYyB,IAIlBb,EAAiB,SAAEM,GACrB,IAAOnE,EAAqCmE,EAArCnE,GAAIC,EAAiCkE,EAAjClE,MAAOmE,EAA0BD,EAA1BC,YAClB,MAAO,CACHpE,GAAAA,EACAC,MAAAA,EACAoE,SAJwCF,EAAbE,SAK3BnE,MAAO+C,EAAYmB,IAI3B,MAAO,CACHjD,QAAAA,EACAD,WAAAA,EACAwC,WAAAA,EACAzC,cAAAA,EACA6C,aAAAA,EACAI,kBAAAA,EACAF,qBAAAA","sources":["components/errorMessage/errorMessage.js","components/movieCard/movieCard.js","components/itemsList/itemsList.js","components/pages/ListPage.js","services/useMoviesService.js","hooks/http.hook.js"],"sourcesContent":["import img from './error.gif';\nimport './errorMessage.scss';\n\nconst ErrorMessage = () => {\n    return (\n        <img className=\"error\" src={img} alt=\"Error\"/>\n    )\n} \n\nexport default ErrorMessage;","import { Link } from \"react-router-dom\";\nimport './movieCard.scss';\n\nconst movieCard = ({category, type, data}) => {\n\tconst {id = 0, title = '', image = ''} = data;\n\n\treturn (\n\t\t<div key={id} className=\"movie\">\n\t\t\t<Link \n\t\t\t\tto={`/${category}/${type}/${id}`} \n\t\t\t\tstyle={{backgroundImage : `url(${image})`}}\n\t\t\t \tclassName=\"movie__link\">\n\t\t\t\t\t<div className=\"play__button\"></div>\n\t\t\t</Link>\n\t\t\t<div className=\"movie__text\">{title}</div>\n\t\t</div>\n\t)\n}\n\nexport default movieCard;","import {useState, useEffect, useMemo } from 'react';\n\nimport {\n  useLocation\n} from \"react-router-dom\";\n\n\nimport Spinner from \"../spinner/spinner\";\nimport ErrorMessage from '../errorMessage/errorMessage';\n\nimport MovieCard from '../movieCard/movieCard'\nimport useMoviesServise from \"../../services/useMoviesService\";\n\nimport './itemsList.scss';\n\nconst setContext = (process, Component, data, newItemLoading) => {\n\tswitch (process) {\n\t\tcase 'waiting':\n\t\t\treturn  <Spinner />;\n\t\tcase 'loading':\n\t\t\treturn  newItemLoading ? <Component/> : <Spinner />;\n\t\tcase 'error':\n\t\t\treturn <ErrorMessage />;\n\t\tcase 'confirmed':\n\t\t\treturn <Component/>\n\t\tdefault:\n\t\t\tthrow new Error(`Unexpected process state => ${process}`);\n\t}\n}\n\nconst ItemsList = ({type, category}) => {\n\tconst [movies, setMovies] = useState([]);\n\tconst [newItemLoading, setNewItemLoading] = useState();\n\tconst [page, setPage] = useState(null);\n\tconst [movieEnded, setMovieEnded] = useState(false);\n\tconst location = useLocation();\n\n\tconst {getMoviesList, setProcess, process} = useMoviesServise();\n\n\tconst movieLoad = (newMovie) => {\n\t\tlet ended = false;\n\t\tif (newMovie.length < 20) {\n\t\t\tended = true;\n\t\t}\n\t\tconsole.log('movies');\n\t\tsetMovies(movies => [...movies, ...newMovie]);\n\t\tsetNewItemLoading(newItemLoading => false);\n\t\tsetPage(page => page + 1);\n\t\tsetMovieEnded(movieEnded => ended);\n\t}\n\n\tconst onRequest = (page, intial) => {\n\t\tintial ? setNewItemLoading(false) : setNewItemLoading(true);\n\t\tconsole.log(page);\n\t\tgetMoviesList(type, page , category)\n\t\t.then(movieLoad)\n\t\t.then(() => setProcess('confirmed'));\n\t}\n\n\tuseEffect(() => {\n\t\tsetMovies([]);\n\t\tsetPage(1);\n\t\tonRequest(page, true);\n\t\t// eslint-disable-next-line\n\t}, [type, category, location.pathname]);\n\n\tconst renderMovies = () => {\n\t\treturn (movies.map(i => <MovieCard category={category} type={type} data={i}/>))\n\t}\n\n\tconst elements = useMemo( () =>  setContext(process, () => renderMovies(), newItemLoading), [process]);\n\n\treturn (\n\t\t<div className=\"movies\">\n\t\t\t<ul className=\"movies__list  _container\">\n\t\t\t\t{elements}\n\t\t\t</ul>\n\t\t\t<button\n\t\t\t\tdisabled={movieEnded}\n\t\t\t\tonClick={() => onRequest(page)}\n\t\t\t\tstyle={{ 'display': movieEnded ? 'none' : '' }} \n\t\t\t\tclassName='btn'>\n\t\t\t\t\tLoad more\n\t\t\t</button>\n\t\t</div>\n\t)\n}\n\nexport default ItemsList;","import ItemsList from \"../itemsList/itemsList\";\nimport {Helmet} from \"react-helmet\";\n\nconst ListPage = ({type, category}) => {\n\treturn (\n\t\t<>\n\t\t\t<Helmet>\n\t\t       <title>{category[0].toUpperCase() + category.slice(1)} of list | Movie-k Offical Site</title>\n\t\t       <meta \n\t\t       \tname=\"description\" \n\t\t       \tcontent=\"Movies move us like nothing else can, whether theyâ€™re scary, funny, dramatic, romantic or anywhere in-between. So many titles, so much to experience.\" />\n\t\t   </Helmet>\n\t\t\t<h2 className=\"movies__title\">\n\t\t\t\t{category.toUpperCase()}\n\t\t\t</h2>\n\t\t\t<div className=\"search  _container\"> \n          \t\t<input type=\"text\" placeholder=\"Search anything...\"/>\n            \t<div className=\"search__button\">\n                \t<button className=\"btn btn__search\">Search</button>\n           \t \t</div>\n        \t</div>\n\t\t\t<ItemsList type={type} category={category}/> \n\t\t</>\n    )\n} \n\nexport default ListPage;","import { useHttp } from \"../hooks/http.hook\";\n\nconst useMoviesServise = () => {\n    const apiKey = '94f7bec1b91c0b7133e5fa7be293f498';\n    const apiBase = 'https://api.themoviedb.org/';\n    const baseImage = 'https://image.tmdb.org/t/p/w500/';\n    const {process, setProcess, request, clearError} = useHttp();\n    //top_rated || popular\n    const getMoviesList = async (type = 'popular', page = 1, category = 'movie') => {\n        const response = await request(`${apiBase}3/${category}/${type}?api_key=${apiKey}&language=en-US&page=${page}`);\n        return response.results.map(transformMovie);\n    }\n\n    const getMovieById = async (id, type = 'popular', category = 'movie') => {\n        const response = await request(`${apiBase}3/${category}/${id}?api_key=${apiKey}&language=en-US`);\n        return transformMovieId(response);\n    }\n\n    const getMovieListBySearch = async (search = '', page = 1, category = 'movie') => {\n        const response = await request(`${apiBase}3/${category}/search?api_key=${apiKey}&language=en-US&page=${page}&query=${search}`);\n        return response.results.map(transformMovie);\n    }\n\n    const getMovieBySimilar = async (id, category = 'movie') => {\n        const response = await request(`${apiBase}3/${category}/${id}/similar?api_key=${apiKey}&language=en-US&page=1`);\n        return response.results.map(transformMovie);\n    }\n\n    const transformMovieId = ( movie ) => {\n        const { \n            id, \n            title, \n            poster_path, \n            overview, \n            genres,\n            homepage,\n            vote_average,\n            vote_count,\n            backdrop_path,\n            tagline,\n            production_countries,\n            release_date\n        } = movie;\n\n        return {\n            id,\n            title,\n            overview,\n            image: baseImage + poster_path,\n            genres: genres.map( i => i.name),\n            homepage,\n            vote_average,\n            vote_count,\n            tagline,\n            production_countries: production_countries.map( i => i.name),\n            release_date,\n            bg: baseImage + backdrop_path\n        }\n    }\n\n    const transformMovie = ( movie ) => {\n        const {id, title, poster_path, overview } = movie;\n        return {\n            id,\n            title,\n            overview: overview,\n            image: baseImage + poster_path,\n        }\n    }\n\n    return {\n        process, \n        setProcess, \n        clearError,\n        getMoviesList,\n        getMovieById,\n        getMovieBySimilar,\n        getMovieListBySearch\n    };\n}\n\nexport default useMoviesServise;","import { useCallback, useState } from 'react';\n\nexport const useHttp = () => {\n\tconst [process, setProcess] = useState('waiting');\n\n\tconst request = useCallback(async (url, method = 'GET', body = null, headers = { 'Content-Type': 'application/json' }) => {\n\t\tsetProcess('loading');\n\n\t\ttry {\n\t\t\tconst response = await fetch(url);\n\n\t\t\tif (!response.ok) throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n\n\t\t\tconst data = await response.json();\n\n\t\t\treturn data;\n\t\t} catch (e) {\n\t\t\tsetProcess('error');\n\t\t\tthrow e;\n\t\t}\n\t}, []);\n\n\tconst clearError = useCallback(() => setProcess('loading'), []);\n\n\treturn { process, setProcess, request, clearError };\n}"],"names":["className","src","img","alt","category","type","data","id","title","image","to","style","backgroundImage","useState","movies","setMovies","setNewItemLoading","page","setPage","movieEnded","setMovieEnded","location","useLocation","useMoviesServise","getMoviesList","setProcess","process","movieLoad","newMovie","ended","length","console","log","newItemLoading","onRequest","intial","then","useEffect","pathname","elements","useMemo","Component","Error","setContext","map","i","disabled","onClick","Helmet","toUpperCase","slice","name","content","placeholder","apiKey","apiBase","baseImage","request","useCallback","url","fetch","response","ok","status","json","clearError","useHttp","results","transformMovie","getMovieById","transformMovieId","getMovieListBySearch","search","getMovieBySimilar","movie","poster_path","overview","genres","homepage","vote_average","vote_count","backdrop_path","tagline","production_countries","release_date","bg"],"sourceRoot":""}