{"version":3,"file":"static/js/394.0e990e10.chunk.js","mappings":"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","sources":["components/errorMessage/errorMessage.js","components/movieCard/movieCard.js","components/pages/SingleMovieLayout/SingleMovieLayout.js","components/slider/slider.js","services/useMoviesService.js","hooks/http.hook.js","utils/setContext.js"],"sourcesContent":["import img from './error.gif';\nimport './errorMessage.scss';\n\nconst ErrorMessage = () => {\n    return (\n        <img className=\"error\" src={img} alt=\"Error\"/>\n    )\n} \n\nexport default ErrorMessage;","import { Link } from \"react-router-dom\";\nimport './movieCard.scss';\n\nconst movieCard = ({category, type, data}) => {\n\tconst {id = 0, title = '', image = ''} = data;\n\n\treturn (\n\t\t<div key={id} className=\"movie\">\n\t\t\t<Link \n\t\t\t\tto={`/${category}/${type}/${id}`} \n\t\t\t\tstyle={{backgroundImage : `url(${image})`}}\n\t\t\t \tclassName=\"movie__link\">\n\t\t\t\t\t<div className=\"play__button\"></div>\n\t\t\t</Link>\n\t\t\t<div className=\"movie__text\">{title}</div>\n\t\t</div>\n\t)\n}\n\nexport default movieCard;","import { useParams } from \"react-router-dom\";\nimport {useState, useEffect} from 'react';\nimport {Helmet} from \"react-helmet\";\nimport Slider from '../../slider/slider';\nimport useMoviesServise from \"../../../services/useMoviesService\";\nimport setContext from '../../../utils/setContext';\n\nimport './SingleMovieLayout.scss';\n\nconst SingleMovieLayout = ({type, category}) => {\n\tconst {id} = useParams();\n\tconst [movies, setMovies] = useState(null);\n\tconst {getMovieById, setProcess, process} = useMoviesServise();\n\n\tconst movieLoad = (data) => {\n\t\tsetMovies(data);\n\t\tsetProcess('confirmed');\t\n\t}\n\n\tuseEffect( () => {\n\t\tgetMovieById(id, type, category).then((data) => movieLoad(data));\n\t}, [id, type]);\n\n\treturn (\n\t\t<>\n\t\t\t{setContext(process, View, movies, type, category)}\n\t\t</>\n\t)\n}\n\nconst View = ({data, type, category}) => {\n\tconst {\t\n\t\tid = 10, \n\t\ttitle = 'Something went wrong', \n\t\timage = '', \n\t\toverview = 'We`ll fix it soon', \n\t\tgenres = [],\n\t\thomepage = 'No data',\n      vote_average = 'No data',\n      vote_count,\n      bg = '',\n\t   tagline = 'No data',\n\t   production_countries,\n\t   release_date = 'No data'\n\t} = data;\n\n\treturn (\n\t\t<>\n\t\t\t<Helmet>\n\t\t       <title>{title} | Movie-k Offical Site</title>\n\t\t       <meta \n\t\t       \tname=\"description\" \n\t\t       \tcontent={overview} />\n\t\t   </Helmet>\n\t\t\t<img className='single__bg' src={bg} alt=\"image\"/>\n\t\t\t<section className=\"single\"> \n\t\t\t\t<div className=\"single__body _container\">\n\t\t\t\t\t<img className='single__img' src={image} alt=\"image\"/>\n\t\t\t\t\t<div className=\"single__text\">\n\t\t\t\t\t\t<h3 className='single__title'>\n\t\t\t\t\t\t\t{title}\n\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t<ul className=\"single__genres\">\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tgenres.map((item,index) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<li key={index} className=\"single__genre\">\n\t\t\t\t\t\t\t\t\t\t\t{item}\n\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t<ul className='single__post'>\n\t\t\t\t\t\t\t<li><span>Rating:</span> {vote_average} ({vote_count})</li>\n\t\t\t\t\t\t\t<li><span>Homepage:</span>  <a href={homepage}>Visit</a></li>\n\t\t\t\t\t\t\t<li><span>Tagline:</span> {tagline}</li>\n\t\t\t\t\t\t\t<li><span>Countries:</span> {production_countries.join(', ')}</li>\n\t\t\t\t\t\t\t<li><span>Release:</span> {release_date}</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t<p className='single__descr'>\n\t\t\t\t\t\t\t<h3 className='single__title'>\n\t\t\t\t\t\t\t\tDescription\n\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t\t{overview}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</section>\n\t\t\t<Slider similar={true} id={id} type={type} category={category}/>\n\t\t</>\n\t)\n}\n\n\nexport default SingleMovieLayout;","import { Swiper, SwiperSlide } from 'swiper/react';\nimport { Link } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport useMoviesServise from '../../services/useMoviesService';\nimport MovieCard from '../movieCard/movieCard';\nimport setContext from '../../utils/setContext';\n\nimport \"swiper/css\";\nimport './slider.scss';\n\nconst Slider = ({type, title, category, similar = false, id = 0}) => {\n\tconst [items, setItems] = useState(null);\n\tconst {getMoviesList, getMovieBySimilar, setProcess, process} = useMoviesServise();\n\n\tconst itemsLoad = (data) => {\n\t\tsetItems(data);\n\t\tsetProcess('confirmed')\t\n\t}\n\n\tuseEffect(() => {\n\t\tif (similar) {\n\t\t\tgetMovieBySimilar(id, category).then(itemsLoad);;\n\t\t} else {\n\t\t\tgetMoviesList(type, 1, category).then(itemsLoad);\n\t\t}\n\t\t// eslint-disable-next-line\n\t}, []);\n\n\treturn (\n\t\t<div className='slider _container'>\n\t\t\t{!similar ? \n\t\t\t\t<div className=\"slider__label\">\n\t\t\t\t\t<h2 className=\"slider__title title\">\n\t\t\t\t\t\t{title}\n\t\t\t\t\t</h2>\n\t\t\t\t\t<Link to={`${category}/${type}`} className=\"btn btn-white\">View more</Link>\n\t\t\t\t</div> \n\t\t\t\t: null}\n\t\t\t{setContext(process, View, items, type, category)}\t\t\t\t\n\t\t</div>\n\t)\n}\n\nconst View = ({data, type, category}) => {\n\treturn (\n\t\t<Swiper\n\t\t\t\tstyle={{position: 'relative'}}\n\t\t\t\tslidesPerView={'auto'}\n\t\t\t\tspaceBetween={10}\n\t\t\t\tpagination={{\n\t\t\t\tclickable: true,\n\t\t\t\t}}\n\t\t\t\tclassName=\"slider\"\n\t\t\t>\n\t \t{\n\t\t\tdata.map(i => {\n\t\t\t\treturn <SwiperSlide key={i.id}> <MovieCard data={i} type={type} category={category}/> </SwiperSlide>\n\t\t\t})\n\t\t}\n\t\t</Swiper>\n\t)\n}\n\n\n\nexport default Slider;","import { useHttp } from \"../hooks/http.hook\";\n\nconst useMoviesServise = () => {\n    const apiKey = '94f7bec1b91c0b7133e5fa7be293f498';\n    const apiBase = 'https://api.themoviedb.org/';\n    const baseImage = 'https://image.tmdb.org/t/p/w500/';\n    const {process, setProcess, request, clearError} = useHttp();\n    //top_rated || popular\n    const getMoviesList = async (type = 'popular', page = 1, category = 'movie') => {\n        const response = await request(`${apiBase}3/${category}/${type}?api_key=${apiKey}&language=en-US&page=${page}`);\n        return response.results.map(transformMovie);\n    }\n\n    const getMovieById = async (id, type = 'popular', category = 'movie') => {\n        const response = await request(`${apiBase}3/${category}/${id}?api_key=${apiKey}&language=en-US`);\n        return transformMovieId(response);\n    }\n\n    const getMovieListBySearch = async (search = '', page = 1, category = 'movie') => {\n        const response = await request(`${apiBase}3/${category}/search?api_key=${apiKey}&language=en-US&page=${page}&query=${search}`);\n        return response.results.map(transformMovie);\n    }\n\n    const getMovieBySimilar = async (id, category = 'movie') => {\n        const response = await request(`${apiBase}3/${category}/${id}/similar?api_key=${apiKey}&language=en-US&page=1`);\n        return response.results.map(transformMovie);\n    }\n\n    const transformMovieId = ( movie ) => {\n        const { \n            id, \n            title, \n            poster_path, \n            overview, \n            genres,\n            homepage,\n            vote_average,\n            vote_count,\n            backdrop_path,\n            tagline,\n            production_countries,\n            release_date\n        } = movie;\n\n        return {\n            id,\n            title,\n            overview,\n            image: baseImage + poster_path,\n            genres: genres.map( i => i.name),\n            homepage,\n            vote_average,\n            vote_count,\n            tagline,\n            production_countries: production_countries.map( i => i.name),\n            release_date,\n            bg: baseImage + backdrop_path\n        }\n    }\n\n    const transformMovie = ( movie ) => {\n        const {id, title, poster_path, overview } = movie;\n        return {\n            id,\n            title,\n            overview: overview,\n            image: baseImage + poster_path,\n        }\n    }\n\n    return {\n        process, \n        setProcess, \n        clearError,\n        getMoviesList,\n        getMovieById,\n        getMovieBySimilar,\n        getMovieListBySearch\n    };\n}\n\nexport default useMoviesServise;","import { useCallback, useState } from 'react';\n\nexport const useHttp = () => {\n\tconst [process, setProcess] = useState('waiting');\n\n\tconst request = useCallback(async (url, method = 'GET', body = null, headers = { 'Content-Type': 'application/json' }) => {\n\t\tsetProcess('loading');\n\n\t\ttry {\n\t\t\tconst response = await fetch(url);\n\n\t\t\tif (!response.ok) throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n\n\t\t\tconst data = await response.json();\n\n\t\t\treturn data;\n\t\t} catch (e) {\n\t\t\tsetProcess('error');\n\t\t\tthrow e;\n\t\t}\n\t}, []);\n\n\tconst clearError = useCallback(() => setProcess('loading'), []);\n\n\treturn { process, setProcess, request, clearError };\n}","import Spinner from '../components/spinner/spinner';\nimport ErrorMessage from '../components/errorMessage/errorMessage'\n\nconst setContext = (process, Component, data, type, category) => {\n    switch (process) {\n        case 'waiting':\n            return  <Spinner/>\n        case 'loading':\n            return <Spinner/>\n        case 'error':\n            return <ErrorMessage/>\n        case 'confirmed':\n            return <Component data={data} type={type} category={category}/>\n        default:\n            throw new Error(`Unexpected process state =(`);\n    }\n}\n\nexport default setContext;"],"names":["className","src","img","alt","category","type","data","id","title","image","to","style","backgroundImage","View","overview","genres","homepage","vote_average","vote_count","bg","tagline","production_countries","release_date","Helmet","name","content","map","item","index","href","join","similar","useParams","useState","movies","setMovies","useMoviesServise","getMovieById","setProcess","process","useEffect","then","movieLoad","setContext","position","slidesPerView","spaceBetween","pagination","clickable","i","items","setItems","getMoviesList","getMovieBySimilar","itemsLoad","apiKey","apiBase","baseImage","request","useCallback","url","fetch","response","ok","Error","status","json","clearError","useHttp","page","results","transformMovie","transformMovieId","getMovieListBySearch","search","movie","poster_path","backdrop_path","Component"],"sourceRoot":""}