{"version":3,"file":"static/js/535.d9fb8076.chunk.js","mappings":"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","sources":["components/errorMessage/errorMessage.js","components/movieCard/movieCard.js","components/randomMovie/randomMovie.js","components/pages/HomePage.js","components/slider/slider.js","services/useMoviesService.js","hooks/http.hook.js","utils/setContext.js"],"sourcesContent":["import img from './error.gif';\nimport './errorMessage.scss';\n\nconst ErrorMessage = () => {\n    return (\n        <img className=\"error\" src={img} alt=\"Error\"/>\n    )\n} \n\nexport default ErrorMessage;","import { Link } from \"react-router-dom\";\nimport './movieCard.scss';\n\nconst movieCard = ({category, type, data}) => {\n\tconst {id = 0, title = '', image = ''} = data;\n\n\treturn (\n\t\t<div key={id} className=\"movie\">\n\t\t\t<Link \n\t\t\t\tto={`/${category}/${type}/${id}`} \n\t\t\t\tstyle={{backgroundImage : `url(${image})`}}\n\t\t\t \tclassName=\"movie__link\">\n\t\t\t\t\t<div className=\"play__button\"></div>\n\t\t\t</Link>\n\t\t\t<div className=\"movie__text\">{title}</div>\n\t\t</div>\n\t)\n}\n\nexport default movieCard;","import {useState, useEffect} from 'react';\nimport { Link } from \"react-router-dom\";\nimport useMoviesServise from \"../../services/useMoviesService\";\nimport setContext from '../../utils/setContext';\n\nimport './randomMovie.scss';\n\nconst RandomMovie = () => {\n\tconst [movies, setMovies] = useState(null);\n\tconst {getMovieById, setProcess, process} = useMoviesServise();\n\n\tconst movieLoad = (data) => {\n\t\tsetMovies(data);\n\t\tsetProcess('confirmed')\t\n\t}\n\n\tuseEffect(() => {\n\t\tconst id = Math.floor(Math.random() * 1000);\n\t\tgetMovieById(id).then((data) => movieLoad(data));\n\t\tsetInterval( () => {\n\n\t\t}, 15000);\n\n\t\treturn clearInterval()\n\t\t// eslint-disable-next-line\n\t}, []);\n\t\n\treturn (\n\t\t<div className='random'>\n\t\t\t{setContext(process, View, movies)}\n\t\t</div>\n\t)\n}\n\nconst View = (data) => {\n\tconst {id = 10, title = 'Something went wrong', image = '', overview = 'We`ll fix it soon'} = data.data;\n\n\treturn (\n\t\t<>\n\t\t<div className=\"random__bg\" style={{backgroundImage : `url(${image})`}}></div>\n\t\t\t<div className=\"random__body _container\">\n\t\t\t\t<div className=\"random__text\">\n\t\t\t\t\t<div className=\"title random__title\">\n\t\t\t\t\t\t{title}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='random__descr'>\n\t\t\t\t\t\t{overview}\n\t\t\t\t\t</div>\n\t\t\t\t\t<Link to={`/movie/popular/${id}`} className=\"btn\">Watch now</Link>\n\t\t\t\t</div>\t\n\t\t\t</div>\n\t\t</>\n\t)\n}\n\nexport default RandomMovie;","import {Helmet} from \"react-helmet\";\nimport RandomMovie from '../randomMovie/randomMovie';\nimport Slider from '../slider/slider';\n\nconst HomePage = () => {\n\treturn (\n\t\t<>\n\t\t\t<Helmet>\n\t\t       <title>Home | Movie-k Offical Site</title>\n\t\t       <meta \n\t\t       \tname=\"description\" \n\t\t       \tcontent=\"Watch movies & TV shows online or stream right to your smart TV, game console, PC, Mac, mobile, tablet and more.\" />\n\t\t   </Helmet>\n\t\t\t<RandomMovie/>\n\t\t\t<Slider title='Trending movies' type='popular' category='movie'/>\n\t\t\t<Slider title='Rated movies' type='top_rated' category='movie'/>\n\t\t\t<Slider title='Trending TV shows' type='popular' category='tv'/>\n\t\t\t<Slider title='Rated TV shows' type='top_rated' category='tv'/>\n\t\t</>\n\t)\n} \n\nexport default HomePage;","import { Swiper, SwiperSlide } from 'swiper/react';\nimport { Link } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport useMoviesServise from '../../services/useMoviesService';\nimport MovieCard from '../movieCard/movieCard';\nimport setContext from '../../utils/setContext';\n\nimport \"swiper/css\";\nimport './slider.scss';\n\nconst Slider = ({type, title, category, similar = false, id = 0}) => {\n\tconst [items, setItems] = useState(null);\n\tconst {getMoviesList, getMovieBySimilar, setProcess, process} = useMoviesServise();\n\n\tconst itemsLoad = (data) => {\n\t\tsetItems(data);\n\t\tsetProcess('confirmed')\t\n\t}\n\n\tuseEffect(() => {\n\t\tif (similar) {\n\t\t\tgetMovieBySimilar(id, category).then(itemsLoad);;\n\t\t} else {\n\t\t\tgetMoviesList(type, 1, category).then(itemsLoad);\n\t\t}\n\t\t// eslint-disable-next-line\n\t}, []);\n\n\treturn (\n\t\t<div className='slider _container'>\n\t\t\t{!similar ? \n\t\t\t\t<div className=\"slider__label\">\n\t\t\t\t\t<h2 className=\"slider__title title\">\n\t\t\t\t\t\t{title}\n\t\t\t\t\t</h2>\n\t\t\t\t\t<Link to={`${category}/${type}`} className=\"btn btn-white\">View more</Link>\n\t\t\t\t</div> \n\t\t\t\t: null}\n\t\t\t{setContext(process, View, items, type, category)}\t\t\t\t\n\t\t</div>\n\t)\n}\n\nconst View = ({data, type, category}) => {\n\treturn (\n\t\t<Swiper\n\t\t\t\tstyle={{position: 'relative'}}\n\t\t\t\tslidesPerView={'auto'}\n\t\t\t\tspaceBetween={10}\n\t\t\t\tpagination={{\n\t\t\t\tclickable: true,\n\t\t\t\t}}\n\t\t\t\tclassName=\"slider\"\n\t\t\t>\n\t \t{\n\t\t\tdata.map(i => {\n\t\t\t\treturn <SwiperSlide key={i.id}> <MovieCard data={i} type={type} category={category}/> </SwiperSlide>\n\t\t\t})\n\t\t}\n\t\t</Swiper>\n\t)\n}\n\n\n\nexport default Slider;","import { useHttp } from \"../hooks/http.hook\";\n\nconst useMoviesServise = () => {\n    const apiKey = '94f7bec1b91c0b7133e5fa7be293f498';\n    const apiBase = 'https://api.themoviedb.org/';\n    const baseImage = 'https://image.tmdb.org/t/p/w500/';\n    const {process, setProcess, request, clearError} = useHttp();\n    //top_rated || popular\n    const getMoviesList = async (type = 'popular', page = 1, category = 'movie') => {\n        const response = await request(`${apiBase}3/${category}/${type}?api_key=${apiKey}&language=en-US&page=${page}`);\n        return response.results.map(transformMovie);\n    }\n\n    const getMovieById = async (id, type = 'popular', category = 'movie') => {\n        const response = await request(`${apiBase}3/${category}/${id}?api_key=${apiKey}&language=en-US`);\n        return transformMovieId(response);\n    }\n\n    const getMovieListBySearch = async (search = '', page = 1, category = 'movie') => {\n        const response = await request(`${apiBase}3/${category}/search?api_key=${apiKey}&language=en-US&page=${page}&query=${search}`);\n        return response.results.map(transformMovie);\n    }\n\n    const getMovieBySimilar = async (id, category = 'movie') => {\n        const response = await request(`${apiBase}3/${category}/${id}/similar?api_key=${apiKey}&language=en-US&page=1`);\n        return response.results.map(transformMovie);\n    }\n\n    const transformMovieId = ( movie ) => {\n        const { \n            id, \n            title, \n            poster_path, \n            overview, \n            genres,\n            homepage,\n            vote_average,\n            vote_count,\n            backdrop_path,\n            tagline,\n            production_countries,\n            release_date\n        } = movie;\n\n        return {\n            id,\n            title,\n            overview,\n            image: baseImage + poster_path,\n            genres: genres.map( i => i.name),\n            homepage,\n            vote_average,\n            vote_count,\n            tagline,\n            production_countries: production_countries.map( i => i.name),\n            release_date,\n            bg: baseImage + backdrop_path\n        }\n    }\n\n    const transformMovie = ( movie ) => {\n        const {id, title, poster_path, overview } = movie;\n        return {\n            id,\n            title,\n            overview: overview,\n            image: baseImage + poster_path,\n        }\n    }\n\n    return {\n        process, \n        setProcess, \n        clearError,\n        getMoviesList,\n        getMovieById,\n        getMovieBySimilar,\n        getMovieListBySearch\n    };\n}\n\nexport default useMoviesServise;","import { useCallback, useState } from 'react';\n\nexport const useHttp = () => {\n\tconst [process, setProcess] = useState('waiting');\n\n\tconst request = useCallback(async (url, method = 'GET', body = null, headers = { 'Content-Type': 'application/json' }) => {\n\t\tsetProcess('loading');\n\n\t\ttry {\n\t\t\tconst response = await fetch(url);\n\n\t\t\tif (!response.ok) throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n\n\t\t\tconst data = await response.json();\n\n\t\t\treturn data;\n\t\t} catch (e) {\n\t\t\tsetProcess('error');\n\t\t\tthrow e;\n\t\t}\n\t}, []);\n\n\tconst clearError = useCallback(() => setProcess('loading'), []);\n\n\treturn { process, setProcess, request, clearError };\n}","import Spinner from '../components/spinner/spinner';\nimport ErrorMessage from '../components/errorMessage/errorMessage'\n\nconst setContext = (process, Component, data, type, category) => {\n    switch (process) {\n        case 'waiting':\n            return  <Spinner/>\n        case 'loading':\n            return <Spinner/>\n        case 'error':\n            return <ErrorMessage/>\n        case 'confirmed':\n            return <Component data={data} type={type} category={category}/>\n        default:\n            throw new Error(`Unexpected process state =(`);\n    }\n}\n\nexport default setContext;"],"names":["className","src","img","alt","category","type","data","id","title","image","to","style","backgroundImage","View","overview","useState","movies","setMovies","useMoviesServise","getMovieById","setProcess","process","useEffect","Math","floor","random","then","movieLoad","setInterval","clearInterval","setContext","Helmet","name","content","position","slidesPerView","spaceBetween","pagination","clickable","map","i","similar","items","setItems","getMoviesList","getMovieBySimilar","itemsLoad","apiKey","apiBase","baseImage","request","useCallback","url","fetch","response","ok","Error","status","json","clearError","useHttp","page","results","transformMovie","transformMovieId","getMovieListBySearch","search","movie","poster_path","genres","homepage","vote_average","vote_count","backdrop_path","tagline","production_countries","release_date","bg","Component"],"sourceRoot":""}